 LED Кубы появились уже давно, есть множество примеров их изготовления.
На просторах интернета можно найти различные, начиная от 3х3х3 одноцветных, заканчивая большими объемными 3D LED экранами.
Наиболее оптимальный размер с которого можно начать освоение их построения и программирования для начинающих это 8х8х8 (512 светодиодов), кубы меньших величин, не столь явно показывают световые эффекты, а кубы начиная уже с 16х16х16, довольно сложны в изготовлении начинающим.
В этой статье я хочу поведать создание LED Куба, размером 8х8х8, с использованием в качестве управляющего микроконтроллера, платы Arduino Pro Mini.
Данная модель куба, может работать в двух режимах: световых эффектов и режим часов.
Это стало возможным, благодаря интеграции в схему модуля RTC.
Управление световым кубом из 512 светодиодов осуществляется посредством MOSFET-транзисторов, 64 транзистора отвечают за подачу положительного напряжения на столбцы, и 8 транзисторов за подачу отрицательного напряжения на слои.
Ток (соответственно яркость) светодиода регулируется по средством 64 резисторов (R011-R641) стоящих после выхода транзисторов на столбцах.
Открытие и закрытие транзисторов осуществляется при помощи сдвиговых регистров, которые в свою очередь управляются по двум линиям (отдельно столбцы и слои) платой Arduino.
Вся конструкция куба разделена на части: Схема No1 или главная плата, на которой установлен сам микроконтроллер (плата Arduino), RTC модуль, SD модуль, сдвиговый регистр и MOSFET-транзисторов, отвечающие за слои; Схема No2 или плата контактов, которая отвечает за крепления самого куба и открытия подачи положительного напряжения на столбцы; Схема No3 или пульт, отвечает за кнопочные команды устройству; Блок питания 5V (15A в данной конструкции применён такой, но поддержка такого тока не обязательна, всё зависит от тока светодиодов, смотрите ниже расчёт); Блок питания подбирается из учёта питания светодиодов, так как одновременно возможно свечение только одного слоя, то есть это 64 светодиода.
Если принять ток одного светодиода равным 30мА, то получаем: 30мА * 64 = 1920мА, то есть будет достаточно 3А блока питания, для питания всей конструкции.
И так, главная плата, представляет собой в основном коммутационный характер, сопряжение всех модулей и управление слоями.
Для наглядности, разделим на две части: коммутационная и управление слоями.
Коммутационная часть, осуществляет ввод основного питания на устройство (J6).
Для прошивки платы Arduino Pro Mini, служит модуль USB to TTL, который подключается через J6-1, контакты J6-J1 и J6-J2, служат для подключения питания на плату Arduino от модуля (данное питание необходимо для прошивки, если не используется блок питания).
Разъем J4, служит для подключения SD карты, а J5 для подключения модуля RTC.
Плата Arduino Pro Mini, подключается через, группу разъемов J1 (1-1, 1-3, 1-4).
Группы разъемов J2 и J3, служат для подключения сигнальных линий для управления платами контроля питания столбцов (Схема 2), и подачи питания.
Группа разъемов J7, служит для подключения клавиатуры (Схема 3).
И наконец группа J8, отвечает за подключение второй части Схемы 1 (управление слоями): Вторая часть Схемы 1, предельно проста: сдвиговый регистр, дает команды MOSFET-транзисторам (1-открыть транзистор, 0-закрыть), сдвиговый регистр, получает через линию данных команды от первой части Схемы 1.
Рассмотрим, Схему 2, она разделена на две одинаковые части, для контроля по 32 столбца каждая.
Так как они абсолютно идентичны, рассмотрим только одну: Так же как и в предыдущей схеме, сдвиговый регистр даёт команды (которые получает через линию данных от платы Arduino Pro Mini), MOSFET-транзисторам (за исключением теперь, 0-открывает транзистор, а 1-закрывает).
Так же тут присутствуют на выходе с транзистора, резисторы по 250 Ом, они служат для контроля тока светодиода, и могут быть заменены на номинал более подходящий для не совсем яркого свечения (в зависимости от используемых светодиодов).
И завершающая, Схема 3, плата кнопок, где всё предельно просто: Скетч занимает более 500 строк, он будет приложен в конце статьи, а здесь постараюсь коротко его описать.
Есть две основные функции управления сдвиговыми регистрами ("column" - заполнение столбцов и " layer_column "- выбор слоя и вызов функции" column "), обе они реализованы через функцию shiftOut.
Это самый легкий способ управления регистрами, но возможно не самый быстрый.
Следом идет основная функция закрашивания всего куба "cube", смысл функции заключается в том, что она последовательно и по циклу (цикл получается само собой) закрашивает каждый слой куба.
В веду такой реализации происходит мерцание куба, оно ели заметное из-за быстрого микропроцессора.
Существует два режима работы куба: "Демонстрация световых эффектов" и "Отображение времени".
Смена осуществляется при помощи кнопки "Mode".
При первом режиме, происходит последовательное считывание с SD карты данных, далее передача выше указанным функциям.
Второй режим реализован гораздо сложнее, так как все данные этого режима вшиты в микропроцессор (этим и объясняется количество строк кода).
Если коротко, то данные с RTC модуля считываются и исходя из этого, опять же, выше указанным функциям отправляются соответствующие битовые переменные, для отображения на светодиодах.
Так же реализована возможность настройки часов, при помощи кнопок управления, для этого достаточно в режиме часов нажать кнопку "Setup", далее при помощи кнопки "Change" менять режим (часы, минуты, дни и т. д.) и настраивать при помощи кнопок "Up" и "Down".
В конце нажав на кнопку "Reset", можно сохранить настройки.
Чтобы создание эффектов сделать упрощенным и функциональным, а так же просмотреть заранее спроецированные эффекты, перед их записью на SD, было решено написать программу на C ++, с использованием Open GL.
Исходный код для Borland C ++ Builder 6, приложен к статье.
Постарался изложить информацию касательно схемы реализации проекта, его электрической части.
Программная часть проекта довольно большая и всё можно найти в исходных файлах.
Если будут вопросы - пишите, обсудим.
Сам проект задумывался, для небольшой практики, работы с микроконтроллерами, в ходе реализации было выяснено: Электрическая часть, не представляет сложности в реализации; Спайка куба, освещена во многих других статьях, по этому я не останавливался на этом, но спаять могу сказать довольно не простое занятие (т. е. больше 1000 точек припоя); Внедрение RTC модуля, не оправдало мои ожидания, так как показ времени не совсем разборчив, это можно наблюдать на видео, единственное если сделать белый матовый корпус, тогда цифры хорошо отличимы.
